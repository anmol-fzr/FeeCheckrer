networks:
  feecheckr:
    driver: bridge

services:
  # fee-giver:
  #   container_name: FeeGiver
  #   build: "./FeeGiver"
  #   ports:
  #     - 5174:5174
  #   networks:
  #     - feecheckr
  #   env_file: "./FeeGiver/.env"
  #   volumes:
  #     - ./FeeGiver:/app
  #   depends_on:
  #     - fee-checkrer

  # fee-checkr:
  #   container_name: FeeCheckr 
  #   build: "./FeeCheckr"
  #   ports:
  #     - 5173:5173
  #   env_file: "./FeeCheckr/.env"
  #   networks:
  #     - feecheckr
  #   volumes:
  #     - ./FeeCheckr:/app
  #   depends_on:
  #     - fee-checkrer

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - feecheckr

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    env_file: ".mongo.env"
    networks:
      - feecheckr
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  fee-checkrer:
    build: "./FeeCheckrer"
    container_name: server
    ports:
      - "3000:3000"
    env_file: ".feecheckrer.env"
    networks:
      - feecheckr
    volumes:
      - ./FeeCheckrer:/app
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  rabbitmq:
    image: rabbitmq:4-alpine
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    env_file: ".rabbitmq.env"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - feecheckr

  mailer:
    build: "./mailer"
    container_name: mailer
    ports: 
      - "6546:6546"
    env_file: ".mailer.env"
    volumes:
      - ./mailer:/app
    depends_on:
      - rabbitmq
    networks:
      - feecheckr
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6546"] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

volumes:
  mongo-data:
    driver: local
  rabbitmq-data: 
    driver: local
